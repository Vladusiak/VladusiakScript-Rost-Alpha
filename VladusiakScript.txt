local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- ===== СОЗДАНИЕ GUI =====
local gui = Instance.new("ScreenGui")
gui.Name = "VladusiakScriptGUI"
gui.ResetOnSpawn = false
gui.Parent = player:WaitForChild("PlayerGui")
gui.Enabled = false

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 400, 0, 600)
frame.Position = UDim2.new(0.5, -175, 0.5, -200)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Parent = gui

-- Заголовок
local header = Instance.new("Frame")
header.Size = UDim2.new(1, 0, 0, 30)
header.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
header.BorderSizePixel = 0
header.Parent = frame

local title = Instance.new("TextLabel")
title.Text = "VladusiakScript"
title.Size = UDim2.new(1, 0, 1, 0)
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextXAlignment = Enum.TextXAlignment.Center
title.Font = Enum.Font.GothamBold
title.TextSize = 16
title.BackgroundTransparency = 1
title.Parent = header

-- Вкладки
local tabs = {"Combat", "Visuals", "Render", "Teleport"} -- Изменено "Config" на "Teleport"
local tabFrames = {}

for i, tabName in ipairs(tabs) do
    local tabButton = Instance.new("TextButton")
    tabButton.Name = tabName
    tabButton.Size = UDim2.new(0.25, 0, 0, 30)
    tabButton.Position = UDim2.new(0.25 * (i-1), 0, 0, 30)
    tabButton.Text = tabName
    tabButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    tabButton.BorderSizePixel = 0
    tabButton.Parent = frame
    
    local contentFrame = Instance.new("Frame")
    contentFrame.Size = UDim2.new(1, 0, 1, -60)
    contentFrame.Position = UDim2.new(0, 0, 0, 60)
    contentFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    contentFrame.BorderSizePixel = 0
    contentFrame.Visible = (i == 1)
    contentFrame.Parent = frame
    tabFrames[tabName] = contentFrame
    
    tabButton.MouseButton1Click:Connect(function()
        for _, f in pairs(tabFrames) do f.Visible = false end
        contentFrame.Visible = true
    end)
end

-- Стиль кнопок
local buttonStyle = {
    Size = UDim2.new(0.9, 0, 0, 30),
    PositionX = 0.05,
    BackgroundColor3 = Color3.fromRGB(60, 60, 60),
    TextColor3 = Color3.fromRGB(255, 255, 255),
    Font = Enum.Font.GothamBold,
    TextSize = 12
}

local function createButton(text, yPos, parent)
    local button = Instance.new("TextButton")
    button.Text = text
    button.Size = buttonStyle.Size
    button.Position = UDim2.new(buttonStyle.PositionX, 0, 0, yPos)
    button.BackgroundColor3 = buttonStyle.BackgroundColor3
    button.TextColor3 = buttonStyle.TextColor3
    button.Font = buttonStyle.Font
    button.TextSize = buttonStyle.TextSize
    button.Parent = parent
    return button
end

-- ===== ВКЛАДКА VISUALS (ESP) =====
local visualsFrame = tabFrames["Visuals"]
for _, child in pairs(visualsFrame:GetChildren()) do child:Destroy() end

local playerToggle = createButton("Player ESP: OFF", 10, visualsFrame)

local espSystem = {
    Player = {
        Active = false,
        Color = Color3.fromRGB(255, 50, 50),
        Items = {},
        Connections = {}
    }
}

local function createESP(target, espType)
    if not target or not target.Character then
        local connection
        connection = target.CharacterAdded:Connect(function(character)
            connection:Disconnect()
            wait(0.5)
            createESP(target, espType)
        end)
        return
    end
    
    local humanoidRootPart = target.Character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then
        local connection
        connection = target.Character:GetPropertyChangedSignal("Parent"):Connect(function()
            if target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
                connection:Disconnect()
                createESP(target, espType)
            end
        end)
        return
    end

    if espSystem[espType].Items[target] then
        if espSystem[espType].Items[target].Billboard then 
            espSystem[espType].Items[target].Billboard:Destroy()
        end
        if espSystem[espType].Items[target].Box then 
            espSystem[espType].Items[target].Box:Destroy()
        end
        if espSystem[espType].Items[target].Connection then 
            espSystem[espType].Items[target].Connection:Disconnect()
        end
    end

    local config = espSystem[espType]
    local text = target.Name

    local billboard = Instance.new("BillboardGui")
    billboard.Name = "ESP_"..target.Name
    billboard.Adornee = humanoidRootPart
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.AlwaysOnTop = true
    billboard.Parent = target.Character

    local nameLabel = Instance.new("TextLabel")
    nameLabel.Text = text
    nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
    nameLabel.Position = UDim2.new(0, 0, 0, 0)
    nameLabel.TextColor3 = config.Color
    nameLabel.BackgroundTransparency = 1
    nameLabel.Font = Enum.Font.GothamBold
    nameLabel.TextSize = 14
    nameLabel.Parent = billboard

    local box = Instance.new("BoxHandleAdornment")
    box.Name = "ESPBox"
    box.Adornee = humanoidRootPart
    box.Size = Vector3.new(4, 6, 4)
    box.Color3 = config.Color
    box.Transparency = 0.5
    box.AlwaysOnTop = true
    box.ZIndex = 10
    box.Parent = target.Character

    local charConnection = target.CharacterAdded:Connect(function(newChar)
        wait(0.5)
        createESP(target, espType)
    end)

    espSystem[espType].Items[target] = {
        Billboard = billboard,
        Box = box,
        Connection = charConnection
    }
end

local function clearESP(espType)
    local config = espSystem[espType]
    for target, data in pairs(config.Items) do
        if data.Billboard then data.Billboard:Destroy() end
        if data.Box then data.Box:Destroy() end
        if data.Connection then data.Connection:Disconnect() end
    end
    config.Items = {}
    
    for _, conn in pairs(config.Connections) do
        conn:Disconnect()
    end
    config.Connections = {}
end

local function updatePlayerESP()
    clearESP("Player")
    
    if espSystem.Player.Active then
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= Players.LocalPlayer then
                createESP(player, "Player")
            end
        end
        
        local playerAddedConn = Players.PlayerAdded:Connect(function(player)
            if espSystem.Player.Active then
                createESP(player, "Player")
            end
        end)
        
        table.insert(espSystem.Player.Connections, playerAddedConn)
    end
end

playerToggle.MouseButton1Click:Connect(function()
    espSystem.Player.Active = not espSystem.Player.Active
    playerToggle.Text = "Player ESP: " .. (espSystem.Player.Active and "ON" or "OFF")
    playerToggle.BackgroundColor3 = espSystem.Player.Active and espSystem.Player.Color or buttonStyle.BackgroundColor3
    updatePlayerESP()
end)

-- ===== ВКЛАДКА COMBAT =====
local combatFrame = tabFrames["Combat"]
for _, child in pairs(combatFrame:GetChildren()) do child:Destroy() end

-- Настройки AimBot
local AimBotSettings = {
    Enabled = false,
    AimKey = Enum.KeyCode.RightControl,
    Smoothness = 0.5,
    MaxDistance = 1000,
    TeamCheck = true,
    FOV = 60,
    FOVVisible = false,
    FOVColor = Color3.fromRGB(255, 255, 255),
    FOVTransparency = 0.7,
    VisibleCheck = true,
    WaitingForBind = false
}

-- Настройки HitBox
local HitBoxSettings = {
    Enabled = false,
    HeadSize = 5,
    HeadOffset = Vector3.new(0, 0.5, 0),
    Players = {},
    Connections = {}
}

-- FOV Circle
local fovGui = Instance.new("ScreenGui")
fovGui.Name = "FOVGui"
fovGui.ResetOnSpawn = false
fovGui.Parent = player:WaitForChild("PlayerGui")
fovGui.Enabled = true

local fovCircle = Instance.new("Frame")
fovCircle.Name = "FOVCircle"
fovCircle.AnchorPoint = Vector2.new(0.5, 0.5)
fovCircle.Size = UDim2.new(0, AimBotSettings.FOV*2, 0, AimBotSettings.FOV*2)
fovCircle.Position = UDim2.new(0.5, 0, 0.5, 0)
fovCircle.BackgroundTransparency = 1
fovCircle.BorderSizePixel = 0
fovCircle.Visible = AimBotSettings.FOVVisible
fovCircle.Parent = fovGui

local circle = Instance.new("UICorner")
circle.CornerRadius = UDim.new(1, 0)
circle.Parent = fovCircle

local stroke = Instance.new("UIStroke")
stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
stroke.Color = AimBotSettings.FOVColor
stroke.Transparency = AimBotSettings.FOVTransparency
stroke.Thickness = 2
stroke.Parent = fovCircle

-- Элементы GUI Combat
local aimToggle = createButton("AimBot: OFF", 10, combatFrame)
local fovToggle = createButton("Show FOV: OFF", 50, combatFrame)
local bindButton = createButton("Bind Key: RightControl", 90, combatFrame)
bindButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)

-- Кнопка HitBox
local hitboxToggle = createButton("HitBox: OFF", 130, combatFrame)
hitboxToggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)

-- Слайдер размера HitBox
local hitboxSizeLabel = Instance.new("TextLabel")
hitboxSizeLabel.Text = "Head Size: " .. HitBoxSettings.HeadSize
hitboxSizeLabel.Size = UDim2.new(0.9, 0, 0, 20)
hitboxSizeLabel.Position = UDim2.new(0.05, 0, 0, 170)
hitboxSizeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
hitboxSizeLabel.BackgroundTransparency = 1
hitboxSizeLabel.Font = Enum.Font.Gotham
hitboxSizeLabel.TextSize = 12
hitboxSizeLabel.Parent = combatFrame

local hitboxSizeSlider = Instance.new("TextBox")
hitboxSizeSlider.PlaceholderText = "1 - 10"
hitboxSizeSlider.Text = tostring(HitBoxSettings.HeadSize)
hitboxSizeSlider.Size = UDim2.new(0.9, 0, 0, 20)
hitboxSizeSlider.Position = UDim2.new(0.05, 0, 0, 190)
hitboxSizeSlider.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
hitboxSizeSlider.TextColor3 = Color3.fromRGB(255, 255, 255)
hitboxSizeSlider.Font = Enum.Font.Gotham
hitboxSizeSlider.TextSize = 12
hitboxSizeSlider.Parent = combatFrame

-- Остальные элементы AimBot
local smoothnessLabel = Instance.new("TextLabel")
smoothnessLabel.Text = "Smoothness: " .. AimBotSettings.Smoothness
smoothnessLabel.Size = UDim2.new(0.9, 0, 0, 20)
smoothnessLabel.Position = UDim2.new(0.05, 0, 0, 220)
smoothnessLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
smoothnessLabel.BackgroundTransparency = 1
smoothnessLabel.Font = Enum.Font.Gotham
smoothnessLabel.TextSize = 12
smoothnessLabel.Parent = combatFrame

local smoothnessSlider = Instance.new("TextBox")
smoothnessSlider.PlaceholderText = "0.1 - 1.0"
smoothnessSlider.Text = tostring(AimBotSettings.Smoothness)
smoothnessSlider.Size = UDim2.new(0.9, 0, 0, 20)
smoothnessSlider.Position = UDim2.new(0.05, 0, 0, 240)
smoothnessSlider.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
smoothnessSlider.TextColor3 = Color3.fromRGB(255, 255, 255)
smoothnessSlider.Font = Enum.Font.Gotham
smoothnessSlider.TextSize = 12
smoothnessSlider.Parent = combatFrame

local distanceLabel = Instance.new("TextLabel")
distanceLabel.Text = "Max Distance: " .. AimBotSettings.MaxDistance
distanceLabel.Size = UDim2.new(0.9, 0, 0, 20)
distanceLabel.Position = UDim2.new(0.05, 0, 0, 270)
distanceLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
distanceLabel.BackgroundTransparency = 1
distanceLabel.Font = Enum.Font.Gotham
distanceLabel.TextSize = 12
distanceLabel.Parent = combatFrame

local distanceSlider = Instance.new("TextBox")
distanceSlider.PlaceholderText = "100 - 5000"
distanceSlider.Text = tostring(AimBotSettings.MaxDistance)
distanceSlider.Size = UDim2.new(0.9, 0, 0, 20)
distanceSlider.Position = UDim2.new(0.05, 0, 0, 290)
distanceSlider.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
distanceSlider.TextColor3 = Color3.fromRGB(255, 255, 255)
distanceSlider.Font = Enum.Font.Gotham
distanceSlider.TextSize = 12
distanceSlider.Parent = combatFrame

local fovLabel = Instance.new("TextLabel")
fovLabel.Text = "FOV Size: " .. AimBotSettings.FOV
fovLabel.Size = UDim2.new(0.9, 0, 0, 20)
fovLabel.Position = UDim2.new(0.05, 0, 0, 320)
fovLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
fovLabel.BackgroundTransparency = 1
fovLabel.Font = Enum.Font.Gotham
fovLabel.TextSize = 12
fovLabel.Parent = combatFrame

local fovSlider = Instance.new("TextBox")
fovSlider.PlaceholderText = "10 - 360"
fovSlider.Text = tostring(AimBotSettings.FOV)
fovSlider.Size = UDim2.new(0.9, 0, 0, 20)
fovSlider.Position = UDim2.new(0.05, 0, 0, 340)
fovSlider.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
fovSlider.TextColor3 = Color3.fromRGB(255, 255, 255)
fovSlider.Font = Enum.Font.Gotham
fovSlider.TextSize = 12
fovSlider.Parent = combatFrame

local teamCheckToggle = createButton("Team Check: ON", 370, combatFrame)
local visibleCheckToggle = createButton("Visible Check: ON", 410, combatFrame)

-- Функции HitBox
local function applyHitBox(player)
    if not HitBoxSettings.Enabled or not player.Character then return end
    
    local head = player.Character:FindFirstChild("Head")
    if head then
        if not HitBoxSettings.Players[player] then
            HitBoxSettings.Players[player] = {
                OriginalSize = head.Size,
                OriginalCFrame = head.CFrame
            }
        end
        
        head.Size = Vector3.new(HitBoxSettings.HeadSize, HitBoxSettings.HeadSize, HitBoxSettings.HeadSize)
        
        local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            head.CFrame = humanoidRootPart.CFrame + HitBoxSettings.HeadOffset
        end
    end
end

local function resetHitBox(player)
    if HitBoxSettings.Players[player] then
        local head = player.Character and player.Character:FindFirstChild("Head")
        if head then
            head.Size = HitBoxSettings.Players[player].OriginalSize
            head.CFrame = HitBoxSettings.Players[player].OriginalCFrame
        end
        HitBoxSettings.Players[player] = nil
    end
end

local function updateHitBoxes()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer then
            if HitBoxSettings.Enabled then
                applyHitBox(player)
            else
                resetHitBox(player)
            end
        end
    end
end

local function setupPlayerHitBox(player)
    if player == Players.LocalPlayer then return end
    
    local function handleCharacter(character)
        if not character then return end
        
        local humanoid = character:WaitForChild("Humanoid", 5)
        if not humanoid then return end
        
        local head = character:WaitForChild("Head", 5)
        if not head then return end
        
        if HitBoxSettings.Enabled then
            applyHitBox(player)
        end
        
        humanoid.Died:Connect(function()
            if HitBoxSettings.Enabled then
                resetHitBox(player)
                task.wait(1)
                if player.Character then
                    handleCharacter(player.Character)
                end
            end
        end)
    end
    
    player.CharacterAdded:Connect(handleCharacter)
    if player.Character then
        handleCharacter(player.Character)
    end
end

for _, player in pairs(Players:GetPlayers()) do
    setupPlayerHitBox(player)
end

Players.PlayerAdded:Connect(setupPlayerHitBox)

-- Функции AimBot
local function updateBindText()
    bindButton.Text = "Bind Key: " .. tostring(AimBotSettings.AimKey):gsub("Enum.KeyCode.", "")
end

local function updateFOVCircle()
    fovCircle.Size = UDim2.new(0, AimBotSettings.FOV*2, 0, AimBotSettings.FOV*2)
    stroke.Color = AimBotSettings.FOVColor
    stroke.Transparency = AimBotSettings.FOVTransparency
    fovCircle.Visible = AimBotSettings.FOVVisible
end

local function IsPartVisible(part, origin)
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {Players.LocalPlayer.Character}
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    local raycastResult = workspace:Raycast(origin, part.Position - origin, raycastParams)
    return not raycastResult or raycastResult.Instance:IsDescendantOf(part.Parent)
end

local function GetClosestEnemy()
    local closestPlayer = nil
    local closestDistance = AimBotSettings.MaxDistance
    local localPlayer = Players.LocalPlayer
    local cameraPos = Camera.CFrame.Position
    local cameraLook = Camera.CFrame.LookVector
    
    local maxAngle = math.rad(AimBotSettings.FOV) / 2
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character then
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid and humanoid.Health > 0 then
                if AimBotSettings.TeamCheck and player.Team == localPlayer.Team then
                    continue
                end
                
                local head = player.Character:FindFirstChild("Head")
                if head then
                    if AimBotSettings.VisibleCheck and not IsPartVisible(head, cameraPos) then
                        continue
                    end
                    
                    local direction = (head.Position - cameraPos).Unit
                    local angle = math.acos(cameraLook:Dot(direction))
                    
                    if angle <= maxAngle then
                        local distance = (head.Position - cameraPos).Magnitude
                        if distance < closestDistance then
                            closestPlayer = player
                            closestDistance = distance
                        end
                    end
                end
            end
        end
    end

    return closestPlayer
end

local function AimAt(targetHead)
    if not targetHead then return end
    local cameraCF = Camera.CFrame
    local targetPos = targetHead.Position + Vector3.new(0, 0.2, 0)
    local direction = (targetPos - cameraCF.Position).Unit
    local newCF = CFrame.new(cameraCF.Position, cameraCF.Position + direction)
    Camera.CFrame = cameraCF:Lerp(newCF, AimBotSettings.Smoothness)
end

-- Обработчики UI
hitboxToggle.MouseButton1Click:Connect(function()
    HitBoxSettings.Enabled = not HitBoxSettings.Enabled
    hitboxToggle.Text = "HitBox: " .. (HitBoxSettings.Enabled and "ON" or "OFF")
    hitboxToggle.BackgroundColor3 = HitBoxSettings.Enabled and Color3.fromRGB(255, 50, 50) or Color3.fromRGB(60, 60, 60)
    updateHitBoxes()
end)

hitboxSizeSlider.FocusLost:Connect(function()
    local value = tonumber(hitboxSizeSlider.Text)
    if value and value >= 1 and value <= 10 then
        HitBoxSettings.HeadSize = value
        hitboxSizeLabel.Text = "Head Size: " .. value
        if HitBoxSettings.Enabled then
            updateHitBoxes()
        end
    else
        hitboxSizeSlider.Text = tostring(HitBoxSettings.HeadSize)
    end
end)

bindButton.MouseButton1Click:Connect(function()
    AimBotSettings.WaitingForBind = true
    bindButton.Text = "Press any key..."
    bindButton.BackgroundColor3 = Color3.fromRGB(120, 50, 50)
end)

UIS.InputBegan:Connect(function(input, gameProcessed)
    if AimBotSettings.WaitingForBind and not gameProcessed then
        if input.UserInputType == Enum.UserInputType.Keyboard then
            AimBotSettings.AimKey = input.KeyCode
            AimBotSettings.WaitingForBind = false
            updateBindText()
            bindButton.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
        end
    end
end)

smoothnessSlider.FocusLost:Connect(function()
    local value = tonumber(smoothnessSlider.Text)
    if value and value >= 0.1 and value <= 1.0 then
        AimBotSettings.Smoothness = value
        smoothnessLabel.Text = "Smoothness: " .. string.format("%.2f", value)
    else
        smoothnessSlider.Text = tostring(AimBotSettings.Smoothness)
    end
end)

distanceSlider.FocusLost:Connect(function()
    local value = tonumber(distanceSlider.Text)
    if value and value >= 100 and value <= 5000 then
        AimBotSettings.MaxDistance = value
        distanceLabel.Text = "Max Distance: " .. value
    else
        distanceSlider.Text = tostring(AimBotSettings.MaxDistance)
    end
end)

fovSlider.FocusLost:Connect(function()
    local value = tonumber(fovSlider.Text)
    if value and value >= 10 and value <= 360 then
        AimBotSettings.FOV = value
        fovLabel.Text = "FOV Size: " .. value
        updateFOVCircle()
    else
        fovSlider.Text = tostring(AimBotSettings.FOV)
    end
end)

teamCheckToggle.MouseButton1Click:Connect(function()
    AimBotSettings.TeamCheck = not AimBotSettings.TeamCheck
    teamCheckToggle.Text = "Team Check: " .. (AimBotSettings.TeamCheck and "ON" or "OFF")
end)

visibleCheckToggle.MouseButton1Click:Connect(function()
    AimBotSettings.VisibleCheck = not AimBotSettings.VisibleCheck
    visibleCheckToggle.Text = "Visible Check: " .. (AimBotSettings.VisibleCheck and "ON" or "OFF")
end)

fovToggle.MouseButton1Click:Connect(function()
    AimBotSettings.FOVVisible = not AimBotSettings.FOVVisible
    fovToggle.Text = "Show FOV: " .. (AimBotSettings.FOVVisible and "ON" or "OFF")
    updateFOVCircle()
end)

-- Основной цикл AimBot
local aiming = false
UIS.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == AimBotSettings.AimKey and AimBotSettings.Enabled then
        aiming = true
    end
end)

UIS.InputEnded:Connect(function(input, gameProcessed)
    if input.KeyCode == AimBotSettings.AimKey then
        aiming = false
    end
end)

RunService.RenderStepped:Connect(function()
    if aiming and AimBotSettings.Enabled then
        local closestEnemy = GetClosestEnemy()
        if closestEnemy and closestEnemy.Character then
            local head = closestEnemy.Character:FindFirstChild("Head")
            if head then
                AimAt(head)
            end
        end
    end
end)

aimToggle.MouseButton1Click:Connect(function()
    AimBotSettings.Enabled = not AimBotSettings.Enabled
    aimToggle.Text = "AimBot: " .. (AimBotSettings.Enabled and "ON" or "OFF")
    aimToggle.BackgroundColor3 = AimBotSettings.Enabled and Color3.fromRGB(50, 255, 50) or buttonStyle.BackgroundColor3
end)

updateBindText()
updateFOVCircle()

-- ===== ВКЛАДКА RENDER (Spin + Forward Boost) =====
local renderFrame = tabFrames["Render"]
for _, child in pairs(renderFrame:GetChildren()) do child:Destroy() end

-- Spin
local spinning = false
local spinSpeed = 5

local spinToggle = createButton("Spin: OFF", 10, renderFrame)
local speedInput = Instance.new("TextBox")
speedInput.PlaceholderText = "Spin Speed (1-20)"
speedInput.Text = tostring(spinSpeed)
speedInput.Size = UDim2.new(0.9, 0, 0, 30)
speedInput.Position = UDim2.new(0.05, 0, 0, 50)
speedInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
speedInput.TextColor3 = Color3.fromRGB(255, 255, 255)
speedInput.Font = Enum.Font.Gotham
speedInput.TextSize = 12
speedInput.Parent = renderFrame

-- Forward Boost
local forwardBoostEnabled = false
local forwardBoostPower = 50

local boostToggle = createButton("Forward Boost: OFF", 90, renderFrame)
local boostPowerInput = Instance.new("TextBox")
boostPowerInput.PlaceholderText = "Boost Power (10-200)"
boostPowerInput.Text = tostring(forwardBoostPower)
boostPowerInput.Size = UDim2.new(0.9, 0, 0, 30)
boostPowerInput.Position = UDim2.new(0.05, 0, 0, 130)
boostPowerInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
boostPowerInput.TextColor3 = Color3.fromRGB(255, 255, 255)
boostPowerInput.Font = Enum.Font.Gotham
boostPowerInput.TextSize = 12
boostPowerInput.Parent = renderFrame

-- Обработчики Spin
spinToggle.MouseButton1Click:Connect(function()
    spinning = not spinning
    spinToggle.Text = "Spin: " .. (spinning and "ON" or "OFF")
    spinToggle.BackgroundColor3 = spinning and Color3.fromRGB(0, 150, 0) or Color3.fromRGB(60, 60, 60)
end)

speedInput.FocusLost:Connect(function()
    local newSpeed = tonumber(speedInput.Text)
    if newSpeed and newSpeed >= 1 and newSpeed <= 20 then
        spinSpeed = newSpeed
    else
        speedInput.Text = tostring(spinSpeed)
    end
end)

-- Обработчики Forward Boost
boostToggle.MouseButton1Click:Connect(function()
    forwardBoostEnabled = not forwardBoostEnabled
    boostToggle.Text = "Forward Boost: " .. (forwardBoostEnabled and "ON" or "OFF")
    boostToggle.BackgroundColor3 = forwardBoostEnabled and Color3.fromRGB(0, 150, 0) or Color3.fromRGB(60, 60, 60)
end)

boostPowerInput.FocusLost:Connect(function()
    local newPower = tonumber(boostPowerInput.Text)
    if newPower and newPower >= 10 and newPower <= 200 then
        forwardBoostPower = newPower
    else
        boostPowerInput.Text = tostring(forwardBoostPower)
    end
end)

-- Функция вращения
RunService.Heartbeat:Connect(function()
    if spinning and player.Character then
        local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
        if humanoidRootPart then
            humanoidRootPart.CFrame = humanoidRootPart.CFrame * CFrame.Angles(0, math.rad(spinSpeed), 0)
        end
    end
end)

-- Функция Forward Boost
local function applyForwardBoost()
    if not forwardBoostEnabled or not player.Character then return end
    
    local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
    local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
    
    if humanoid and humanoidRootPart then
        humanoidRootPart.Velocity = Vector3.new(
            humanoidRootPart.CFrame.LookVector.X * forwardBoostPower,
            humanoidRootPart.Velocity.Y,
            humanoidRootPart.CFrame.LookVector.Z * forwardBoostPower
        )
    end
end

UIS.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.Space and forwardBoostEnabled then
        applyForwardBoost()
    end
end)

-- ===== ВКЛАДКА TELEPORT (QuickPort) ===== -- Изменено название с Config на Teleport
local teleportFrame = tabFrames["Teleport"] -- Изменено с configFrame на teleportFrame
for _, child in pairs(teleportFrame:GetChildren()) do child:Destroy() end

-- Кнопка активации QuickPort
local teleportToggle = createButton("QuickPort: OFF", 10, teleportFrame)
local teleportEnabled = false

-- Фрейм для списка игроков
local playerListFrame = Instance.new("ScrollingFrame")
playerListFrame.Size = UDim2.new(0.9, 0, 0, 400)
playerListFrame.Position = UDim2.new(0.05, 0, 0, 50)
playerListFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
playerListFrame.BorderSizePixel = 0
playerListFrame.ScrollBarThickness = 5
playerListFrame.Parent = teleportFrame
playerListFrame.Visible = false

-- Список кнопок игроков
local playerButtons = {}
local buttonHeight = 30
local buttonSpacing = 5

-- Функция обновления списка игроков
local function updatePlayerList()
    for _, button in pairs(playerButtons) do
        button:Destroy()
    end
    playerButtons = {}
    
    local yOffset = 5
    local players = Players:GetPlayers()
    
    for i, targetPlayer in ipairs(players) do
        if targetPlayer ~= player then
            local teleportButton = Instance.new("TextButton")
            teleportButton.Size = UDim2.new(0.95, 0, 0, buttonHeight)
            teleportButton.Position = UDim2.new(0.025, 0, 0, yOffset)
            teleportButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            teleportButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            teleportButton.Font = Enum.Font.Gotham
            teleportButton.TextSize = 12
            teleportButton.Text = targetPlayer.Name
            teleportButton.Parent = playerListFrame
            
            teleportButton.MouseButton1Click:Connect(function()
                if teleportEnabled and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    local targetPos = targetPlayer.Character.HumanoidRootPart.Position
                    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                        player.Character.HumanoidRootPart.CFrame = CFrame.new(targetPos + Vector3.new(0, 3, 0))
                    end
                end
            end)
            
            table.insert(playerButtons, teleportButton)
            yOffset = yOffset + buttonHeight + buttonSpacing
        end
    end
    
    playerListFrame.CanvasSize = UDim2.new(0, 0, 0, yOffset)
end

-- Обработчик кнопки QuickPort
teleportToggle.MouseButton1Click:Connect(function()
    teleportEnabled = not teleportEnabled
    teleportToggle.Text = "QuickPort: " .. (teleportEnabled and "ON" or "OFF")
    teleportToggle.BackgroundColor3 = teleportEnabled and Color3.fromRGB(0, 150, 255) or buttonStyle.BackgroundColor3
    playerListFrame.Visible = teleportEnabled
    if teleportEnabled then
        updatePlayerList()
    else
        for _, button in pairs(playerButtons) do
            button:Destroy()
        end
        playerButtons = {}
        playerListFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    end
end)

-- Автоматическое обновление списка
Players.PlayerAdded:Connect(function()
    if teleportEnabled then
        updatePlayerList()
    end
end)

Players.PlayerRemoving:Connect(function()
    if teleportEnabled then
        updatePlayerList()
    end
end)

-- Управление GUI
UIS.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.RightShift then
        gui.Enabled = not gui.Enabled
    end
end)

-- Перетаскивание
local dragInput, dragStart, startPos
header.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragStart = input.Position
        startPos = frame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragStart = nil
            end
        end)
    end
end)

header.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement and dragStart then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(
            startPos.X.Scale, 
            startPos.X.Offset + delta.X, 
            startPos.Y.Scale, 
            startPos.Y.Offset + delta.Y
        )
    end
end)

gui.Destroying:Connect(function()
    clearESP("Player")
    fovGui:Destroy()
    for player, data in pairs(HitBoxSettings.Players) do
        if player.Character then
            local head = player.Character:FindFirstChild("Head")
            if head then
                head.Size = data.OriginalSize
                head.CFrame = data.OriginalCFrame
            end
        end
    end
end)
